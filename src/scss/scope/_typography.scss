@use '../core/functions';
@use '../core/mixins';
@use '../core/variables';
@use '../mixins/breakpoints';
@use '../mixins/type';
@use '../components/terms';
@use '../components/table';

.typography {
  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }

  p {
    font-size: variables.$paragraph-font-size;
    margin-bottom: variables.$paragraph-margin-bottom;
  }

  a {
    font-weight: variables.$font-weight-medium;
    @include type.link-border;
  }

  a:not([href*='middlebury.edu']):not([href^='#']):not([href^='/']):not(
      [href^='mailto:']):not([href*='drive.google.com']):not([href*='docs.google.com']):not(
      [href*='.pdf']):not([href*='middleburycollege-my.sharepoint.com']):not([name]) {
    @include type.link-external;
  }

  a[href^='mailto:'],
  a[href*='drive.google.com'],
  a[href*='docs.google.com'],
  a[href*='.pdf'],
  a[href^='/media/'],
  a[href*='middleburycollege-my.sharepoint.com'] {
    &:after {
      font-size: functions.rem(10);
      display: inline-block;
      text-transform: uppercase;
      letter-spacing: variables.$letter-spacing;
      padding: variables.$spacing-1;
      line-height: 1;
      background: variables.$navy;
      color: variables.$white;
      margin-left: variables.$spacing-1;
      transition: 0.2s;
    }

    &:hover,
    &:focus {
      &:after {
        transform: translateY(-4px);
      }
    }
  }

  a[href^='mailto:'] {
    &:after {
      content: 'Email';
    }
  }

  a[href*='.pdf'],
  a[href^='/media/'] {
    &:after {
      content: 'PDF';
    }
  }

  a[href*='drive.google.com'],
  a[href*='docs.google.com'] {
    &:after {
      content: 'Google Drive';
    }
  }

  a[href*='middleburycollege-my.sharepoint.com'] {
    &:after {
      content: 'Office 365';
    }
  }

  // reset styles for jump links
  a[id][name] {
    color: currentcolor;
    text-decoration: none;
    border: 0;
  }

  ul,
  ol {
    margin-bottom: variables.$paragraph-margin-bottom;
    padding-left: variables.$spacing-5;
    padding-right: variables.$spacing-5;
    font-size: variables.$paragraph-font-size;

    ul,
    ol {
      margin-top: variables.$spacing-3;
      margin-bottom: variables.$spacing-3;
      padding-left: variables.$spacing-4;
    }
  }

  ul {
    > li {
      position: relative;

      &:before {
        content: '\2022';
        position: absolute;
        right: calc(100% + 8px);
        top: 6px;
        font-size: 10px;
      }
    }
  }

  ol {
    list-style-type: none;
    counter-reset: ol;

    > li {
      counter-increment: ol;
      position: relative;

      &:before {
        content: counter(ol) '.';
        position: absolute;
        right: calc(100% + #{variables.$spacing-2});
        top: 0.25rem;
        font-size: variables.$typescale-2;
        line-height: variables.$line-height-body;
      }
    }
  }

  li {
    &:not(:last-of-type) {
      margin-bottom: variables.$spacing-2;
    }

    p:last-of-type {
      margin-bottom: 0;
    }
  }

  dl {
    margin-bottom: variables.$spacing-5;
    margin-top: variables.$spacing-5;

    @include terms.terms;
  }

  dt {
    @include terms.terms-title;
  }

  dd {
    @include terms.terms-text;
  }

  // Maintain vertical h2 top margin when
  // there is a text component followed by another
  // or intro text before a text component.
  //
  // These styles are duplicated with the below h2 ruleset
  // because @at-root seems to make the styles root for the entire list of selectors
  // instead of the single selector it is used in front of.
  // See https://stackoverflow.com/q/36902927/2193516
  @at-root .paragraph--text + .paragraph--text > h2,
    .lead + .paragraph--text > h2 {
    @include type.h2;

    & {
      margin-top: variables.$spacing-7;
      margin-bottom: variables.$spacing-4;
    }

    @include breakpoints.breakpoint(lg) {
      margin-top: variables.$spacing-8;
      margin-bottom: variables.$spacing-5;
    }
  }

  h2 {
    @include type.h2;

    & {
      margin-top: variables.$spacing-7;
      margin-bottom: variables.$spacing-4;
    }

    @include breakpoints.breakpoint(lg) {
      margin-top: variables.$spacing-8;
      margin-bottom: variables.$spacing-5;
    }
  }

  h3 {
    @include type.h3;
    margin-top: variables.$spacing-5;
    margin-bottom: variables.$spacing-2;
    font-weight: variables.$font-weight-semibold;
  }

  h4 {
    @include type.h4;
    margin-top: variables.$spacing-5;
    margin-bottom: variables.$spacing-1;
    font-weight: variables.$font-weight-semibold;
  }

  h5 {
    @include type.h5;
    margin-top: variables.$spacing-5;
    margin-bottom: variables.$spacing-1;
    font-weight: variables.$font-weight-semibold;
  }

  h6 {
    @include type.h6;
    margin-top: variables.$spacing-5;
    margin-bottom: variables.$spacing-1;
    font-weight: variables.$font-weight-semibold;
  }

  h6 > a,
  h5 > a,
  h4 > a,
  h3 > a {
    font-weight: 600;
  }

  table {
    @extend %table;
  }

  blockquote {
    padding-left: variables.$spacing-4;
    border-left: 2px solid variables.$border-color;
    margin-top: variables.$spacing-5;
    margin-bottom: variables.$spacing-5;
    font-size: variables.$paragraph-font-size;
  }

  @media print {
    a[href]:after {
      content: '(' attr(href) ')';
      background: transparent;
      color: variables.$black;
      text-transform: none;
      letter-spacing: 0;
      font-size: inherit;
      margin: 0;
      padding: 0;
      word-break: break-word;
      font-style: italic;
      white-space: nowrap;
    }

    abbr[title]:after {
      content: '(' attr(title) ')';
    }
  }
}

.typography--sm {
  li,
  p {
    font-size: variables.$typescale-2;
  }
}

.contains-links {
  @include mixins.contains-links;
}
