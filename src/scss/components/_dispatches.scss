@use '../core/variables';
@use '../mixins/breakpoints';
@use 'dispatches-item';

.dispatches {
  // margin-bottom: $component-margin-bottom;
}

.dispatches-row {
  position: relative;
}

.dispatches__controls {
  margin-top: variables.$spacing-5;
  // padding: 0 $spacing-3;

  @include breakpoints.breakpoint(md) {
    margin-top: auto;
  }
}

.dispatches-button {
  // position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  position: absolute;
  z-index: variables.$z-index-dispatches;
  top: 25%;
  width: variables.$spacing-5;
  height: variables.$spacing-5;
  filter: drop-shadow(0 0 variables.$spacing-2 rgb(0 0 0 / 0.2));

  @include breakpoints.breakpoint(sm) {
    top: 50%;
  }

  @include breakpoints.breakpoint(md) {
    width: variables.$spacing-6;
    height: variables.$spacing-6;
  }

  &:first-child {
    margin-left: variables.$spacing-3;

    .dispatches-button--icon {
      margin-right: variables.$spacing-1;
    }
  }

  &:last-child {
    right: 0;
    margin-right: variables.$spacing-3;

    .dispatches-button--icon {
      margin-left: variables.$spacing-1;
    }
  }

  svg.dispatches-button--icon {
    width: variables.$spacing-4;
    height: variables.$spacing-4;

    @include breakpoints.breakpoint(md) {
      width: variables.$spacing-5;
      height: variables.$spacing-5;
    }
  }

  &.button--disabled {
    opacity: 0;
  }
}

.dispatches__container {
  @include breakpoints.breakpoint(sm) {
    border-right: dispatches-item.$dispatches-border;
  }
}

.dispatches__content {
  display: flex;
  height: dispatches-item.$dispatches-card-height;
}
